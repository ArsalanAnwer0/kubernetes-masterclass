apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app-hpa
  labels:
    app: web-app-hpa
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-app-hpa
  template:
    metadata:
      labels:
        app: web-app-hpa
    spec:
      containers:
      - name: web-app
        image: nginx:1.21
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        # Create a simple load endpoint
        lifecycle:
          postStart:
            exec:
              command:
              - sh
              - -c
              - |
                # Create a simple load generator endpoint
                cat > /usr/share/nginx/html/load << 'EOF'
                #!/bin/sh
                # Generate CPU load for testing HPA
                for i in $(seq 1 100); do
                  echo "Generating load iteration $i"
                  dd if=/dev/urandom of=/dev/null bs=1M count=10 2>/dev/null
                done
                echo "Load generation complete"
                EOF
                chmod +x /usr/share/nginx/html/load
---
apiVersion: v1
kind: Service
metadata:
  name: web-app-hpa-service
spec:
  selector:
    app: web-app-hpa
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-app-hpa
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60